library(readr)
library(ggplot2)
install.packages("datasauRus")
library(datasauRus)
library(scales)
library(dplyr)
library(tidyr)
install.packages("plotrix")
library(plotrix)
install.packages("devtools")
devtools::install_github("matthewbjane/ThemePark")
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Lade die benötigten Pakete
library(ggplot2)
# Setze den Seed für Reproduzierbarkeit
set.seed(123)
# Simuliere einen Datensatz
n <- 100
daten <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
##############################
# Schlechter Plot (schlecht gestaltet)
##############################
# Merkmale eines schlechten Plots:
# - Unpassende Farben und Symbolgrößen
# - Fehlende Achsenbeschriftungen
# - Ein unübersichtliches Theme (hier: theme_void(), welches alle Achsen und den Hintergrund entfernt)
# - Zu starke Markierungspunkte (überladen)
plot_schlecht <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "pink", size = 5, shape = 8) +             # Auffällige, übergroße Punkte
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
theme_void() +                                                 # Entfernt Achsen, Raster und Hintergrund
ggtitle("Schlechter Plot")                                     # Nur ein Titel, aber keine weiteren Informationen
# Ausgabe des schlechten Plots
print(plot_schlecht)
##############################
# Guter Plot (gut gestaltet)
##############################
# Merkmale eines guten Plots:
# - Klare und aussagekräftige Achsenbeschriftungen und Titel
# - Passende Farbauswahl und angemessene Punktgrößen
# - Ein übersichtliches und modernes Theme (hier: theme_minimal())
plot_gut <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +         # Dezente, transparente Punkte
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +        # Regressionslinie mit Konfidenzintervall
labs(
title = "Guter Plot: Beziehung zwischen X und Y",
x = "X-Werte",
y = "Y-Werte",
caption = "Daten simuliert mit set.seed(123)"
) +
theme_minimal(base_size = 14) +                                    # Modernes, sauberes Theme
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Ausgabe des guten Plots
print(plot_gut)
# Ausgabe des schlechten Plots
print(plot_bad)
plot_bad <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "pink", size = 5, shape = 8) +             # Big Points
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
theme_void() +                                                 # Entfernt Achsen, Raster und Hintergrund
ggtitle("Schlechter Plot")                                     # Nur ein Titel, aber keine weiteren Informationen
# Setting the random seed seed
set.seed(123)
# Simulating the data
n <- 100
daten <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "pink", size = 5, shape = 8) +             # Big Points that stand out
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
theme_void() +                                                 # No achses, roster or background
ggtitle("Schlechter Plot")                                     # Only the title but no more informations given, it makes the interpretation really difficult
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed seed
set.seed(123)
# Simulating the data
n <- 100
daten <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "pink", size = 5, shape = 8) +             # Big Points that stand out
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
theme_void() +                                                 # No achses, roster or background
ggtitle("Schlechter Plot")                                     # Only the title but no more informations given, it makes the interpretation really difficult
# Ausgabe des schlechten Plots
print(plot_bad)
plot_gut <- ggplot(daten, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +         # Dezente, transparente Punkte
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +        # Regressionslinie mit Konfidenzintervall
labs(
title = "Guter Plot: Beziehung zwischen X und Y",
x = "X-Werte",
y = "Y-Werte",
caption = "Daten simuliert mit set.seed(123)"
) +
theme_minimal(base_size = 14) +                                    # Modernes, sauberes Theme
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Ausgabe des guten Plots
print(plot_gut)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding colors and making the lining worse
geom_point(color = "pink", size = 5, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no roster or background
theme_void() +
ggtitle("Connection between games and agression")
# Printing the bad plot
print(plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
title = "The interplay between games and agression",
x = "Game Time",
y = "Agression Value",
caption = "The data was simulated thanks to R"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title pretty
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding colors and making the lining worse
geom_point(color = "pink", size = 5, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no roster or background
theme_void() +
ggtitle("Connection between games and agression")
# Printing the bad plot
print(plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
title = "The interplay between games and agression",
x = "Game Time",
y = "Agression Value",
caption = "The data was simulated thanks to R"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title pretty
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding colors and making the lining worse
geom_point(color = "pink", size = 5, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no roster or background
theme_void() +
ggtitle("Connection between games and agression")
# Printing the bad plot
print(plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
title = "The interplay between games and agression",
x = "Game Time in min",
y = "Agression Value",
caption = "The data was simulated thanks to R"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title pretty
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding  extreme colors and making the lining worse by dotting it
geom_point(color = "pink", size = 7, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no axes, ticks or gridlines
theme_void() +
ggtitle("Connection between games and agression")
# Printing the bad plot
print(plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
# Defining title,x,y and caption
title = "The interplay between games and agression",
x = "Game Time in min",
y = "Agression Value",
caption = "The data was simulated thanks to R"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title appealing
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding  extreme colors and making the lining worse by dotting it
geom_point(color = "pink", size = 7, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no axes, ticks or gridlines
theme_void() +
ggtitle("Connection between games and agression")
# Printing the bad plot
print(plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
# Defining title,x,y and caption
title = "The interplay between games and agression",
x = "Game Time in min",
y = "Agression Value",
caption = "The data was simulated thanks to R, n=100"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title appealing
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
# Loading some packages for plotting
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(ThemePark)
library(patchwork)
library(janitor)
library(knitr)
library(kableExtra)
# Setting the random seed
set.seed(123)
# Simulating the data
n <- 100
game_agression <- data.frame(
x = rnorm(n, mean = 50, sd = 10),
y = rnorm(n, mean = 100, sd = 20)
)
plot_bad <- ggplot(game_agression, aes(x = x, y = y)) +
# Adding  extreme colors and making the lining worse by dotting it
geom_point(color = "pink", size = 7, shape = 8) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dotted") +
# The void theme has no axes, ticks or gridlines
theme_void() +
ggtitle("Connection between games and agression")
# Printing and saving the bad plot
print(plot_bad)
ggsave("plot_bad.png",plot = plot_bad)
plot_good <- ggplot(game_agression, aes(x = x, y = y)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
# Regression line with confidence interval
geom_smooth(method = "lm", se = TRUE, color = "darkblue") +
labs(
# Defining title,x,y and caption
title = "The interplay between games and agression",
x = "Game Time in min",
y = "Agression Value",
caption = "The data was simulated thanks to R, n=100"
) +
theme_minimal(base_size = 14) +
# Centering and making the Title appealing
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1)
)
# Printig the good plot
print(plot_good)
ggsave("plot_good.png",plot = plot_good)
# Printig the good plot
print(plot_good)
ggsave("plot_good.png",plot = plot_good, bg= "white")
# Printing and saving the bad plot
print(plot_bad)
ggsave("plot_bad.png",plot = plot_bad,bg= "white")
